name: update

on:
  schedule:
  - cron: "0 12 * * *"
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  update:
    runs-on: windows-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
      PYTHONIOENCODING: utf-8
      PYTHONUTF8: 1
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        release: false
        install: >-
          mingw-w64-x86_64-python
          mingw-w64-x86_64-python-pip
          mingw-w64-x86_64-python-wrapt
          mingw-w64-x86_64-python-yaml
          mingw-w64-x86_64-python-rich
          git
    - uses: actions/checkout@v2
      with:
        path: updater
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Clone MINGW
      uses: actions/checkout@v2
      with:
        repository: msys2/MINGW-packages
        ref: master
        path: "MINGW-packages"
        persist-credentials: false
        fetch-depth: 0 
    - uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      working-directory: updater
      run: |
        py -3.9 -m pip install --user -r requirements.txt
    - name: Get Commit Hash
      id: check
      shell: pwsh
      working-directory: MINGW-packages
      run: |
        $commitHash = git log -n 1  --pretty=format:"%H"
        echo "::set-output name=commit::$commitHash"
    - name: Cache multiple paths
      uses: actions/cache@v2
      id: cache
      with:
        path: updater/pymapping.json
        key: ${{ steps.check.outputs.commit }}
    - name: Prepare for running updater
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: updater
      run: |
        py -3.9 utils/pynamemappinggen.py ../MINGW-packages
    - name: Run updater
      working-directory: updater
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        py -3.9 -m updater
    - name: "Upload logs"
      uses: actions/upload-artifact@v2
      with:
          name: logs
          path: updater/*.log
    - name: Check for modified files
      shell: bash
      working-directory: MINGW-packages
      id: git-check
      run: |
          echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
          git ls-files -m>/d/diffmod.txt
    - name: Check Whether to Push
      working-directory: updater
      id: checkpush
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        output=$(py -3.9 utils/check_push.py)
        echo "::set-output name=push::$output"
    - name: Commit
      working-directory: updater
      env:
        commit_message: ${{ steps.message.outputs.commit_message }}
        AUTHOR_EMAIL: ${{ secrets.AUTHOR_EMAIL }}
      if: steps.git-check.outputs.modified == 'true'
      run: |
        py -3.9 utils/commit_message.py
    - name: Push changes
      uses: ad-m/github-push-action@master
      if: steps.git-check.outputs.modified == 'true' && steps.checkpush.outputs.push == 'true'
      with:
        github_token: ${{ secrets.TOKEN_PUSH }}
        branch: update
        force: true
        directory: MINGW-packages
        repository: naveen521kk/MINGW-packages
